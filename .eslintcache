[{"C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\index.js":"1","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\App.js":"2","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Navbar.js":"3","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Products.js":"4","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Item.js":"5","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Cart.js":"6","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Checkout.js":"7","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Category.js":"8"},{"size":180,"mtime":1610656413483,"results":"9","hashOfConfig":"10"},{"size":330,"mtime":1612126992731,"results":"11","hashOfConfig":"10"},{"size":487,"mtime":1612278078253,"results":"12","hashOfConfig":"10"},{"size":3693,"mtime":1612280710327,"results":"13","hashOfConfig":"10"},{"size":1579,"mtime":1612630146520,"results":"14","hashOfConfig":"10"},{"size":1154,"mtime":1611049984085,"results":"15","hashOfConfig":"10"},{"size":2947,"mtime":1612370555940,"results":"16","hashOfConfig":"10"},{"size":1150,"mtime":1612216740520,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8xadar",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\index.js",[],["41","42"],"C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\App.js",["43"],"\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Products from './components/Products'\n\nimport Cart from './components/Cart'\n\nfunction App() {\n\n  return (\n    <div >\n      <Navbar/>\n      \n        <div className='App'>\n            <Products/>\n            \n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Navbar.js",["44"],"import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='navbar'>\r\n       <nav>\r\n    <div className=\"nav-wrapper\">\r\n      <a href=\"#\" className=\"brand-logo \">Shopline</a>\r\n      \r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li className='nav-link'><button>Pending</button></li>\r\n          <li className='nav-link'><button>Contact</button></li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Products.js",["45","46"],"import React, {useEffect,useState} from 'react'\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios'\r\n//import data from '../data.json'\r\nimport Item from './Item'\r\nimport Category from './Category'\r\nimport Cart from './Cart'\r\nimport Checkout from './Checkout'\r\n//import Payment from './Payment'\r\n\r\nconst storeId = [];\r\n\r\nconst Products = () => {\r\n\r\nconst [productdata, setProductdata] = useState([])//data.products\r\nconst [cart, setCart] = useState([])\r\nconst [categorypick, setCategorypick] = useState(\"Clothes\")\r\n\r\n//Function to select product category\r\nconst selection = async(e)=>{\r\n  const response = await axios.get('http://onlineshoppingbackend-env.eba-zaj9kvmp.eu-west-2.elasticbeanstalk.com/retrieveproducts',{params:{category:e}})\r\n  setProductdata(response.data)\r\n}\r\n\r\nuseEffect(()=>{\r\n  \r\n  const getproducts = async()=>{\r\n    \r\n  const res = await axios.get('http://onlineshoppingbackend-env.eba-zaj9kvmp.eu-west-2.elasticbeanstalk.com/retrieveproducts',{params:{category:categorypick}})\r\n  setProductdata(res.data)\r\n  }\r\n  getproducts()\r\n},[])\r\n\r\n// fetch product id to use it to search a selected product and the quantity entered by the user\r\n//Add item to the basket\r\nconst selectedid = (e)=>{ \r\n  const selecteditem =  productdata.filter(n=>n._id===e.id)\r\n        \r\n         if(storeId.indexOf(e.id)>=0){return swal({\r\n          title: \"oops!\",\r\n          text: \"Item already in basket\",\r\n          button: \"OK\",\r\n        })}//Terminate if already in the basket\r\n        \r\n  //Add qty into the object\r\n      const Target = Object.assign(selecteditem[0], {qty:e.qty});\r\n      setCart([...cart,Target])\r\n      storeId.push(e.id)\r\n}\r\n\r\n//delete item from the basket\r\nconst deleteditem = (e)=>{   \r\n  \r\n   const res = cart.filter(p=>p._id!==e)   \r\n   setCart(res)\r\n   const pos =storeId.indexOf(e)\r\n   storeId.splice(pos, 1);//update storeId array\r\n  \r\n}  \r\n\r\n//Increment the qty of an item by one for each click\r\n const add_qty = (e)=>{\r\n    cart.find(v=>v._id ===e.id).qty=e.qty\r\n    setCart([...cart]) \r\n}\r\n\r\n//Decrement the qty of an item by one for each click\r\nconst remove_qty = (e)=>{\r\n       if(e.qty <= 0){return} //stop the decrement below zero. Terminate the operation\r\n  cart.find(v=>v._id ===e.id).qty=e.qty\r\n  setCart([...cart]) \r\n}\r\n\r\n//Calculate total price of items in the basket\r\nconst totalprice = cart.reduce((a, c) => a + c.price * c.qty, 0)\r\n\r\n//Basket.Map through selected products\r\nconst basket = cart.map(item=>(<div key={item._id}><Cart qty={item.qty} product={item.product} price={item.price} image={item.image} deleteditem={deleteditem} id={item._id} add_qty={add_qty} remove_qty={remove_qty}/></div>))\r\n\r\n//List products. Item component is used in the map() method\r\nconst display = productdata.map(item=>(<div key={item._id}><Item image={item.image} name={item.product} price={item.price} description={item.description} id={item._id} selectedid={selectedid}/></div>))\r\n \r\n// clears the chart after shopping\r\nconst clearchart = ()=>{setCart([]);  console.log('chart reset')}// clears the chart after shopping\r\n\r\n\r\n\r\n  return (\r\n   <div className='row'>\r\n          \r\n         <Category selection={selection}/>\r\n        <div className=' products col s12 m10'>\r\n              {display}\r\n        </div>  \r\n\r\n        <div className='basket-area col s12 m2'>              \r\n        <i class=\"material-icons \">shopping_cart</i><b>Basket cost: </b><span className='totalprice'>£{totalprice.toFixed(2)}</span>\r\n        {(cart.length!==0 && <Checkout cart={cart} totalprice={totalprice} clearchart ={clearchart}/>)}  \r\n             {(cart.length!==0 ? basket : <p>Basket Empty</p>)}    \r\n        </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Products\r\n","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Item.js",["47"],"import React,{useState} from 'react'\r\nimport '../App.css';\r\n\r\nconst Item = ({name,price,image,description,id,selectedid}) => {\r\n\r\n  const[qty, setQty] = useState(1)\r\n  const amount = (e)=>{setQty(e.target.value)}        \r\n  return (\r\n     \r\n          \r\n             <div className=\"card Item\">\r\n                <div className=\"card-image waves-effect waves-block waves-light\">\r\n                  <img src={image} alt='product-image'/>\r\n                </div>\r\n                \r\n                <div className=\"card-content Item-content\">\r\n                <p><b>Product:</b> {name}</p>\r\n                  <p><b>Price:</b> £{price.toFixed(2)}</p>\r\n                  <span className=\"card-title activator \"><i className=\"material-icons right\">more</i></span>\r\n                  \r\n                </div>\r\n                <div className=\"card-reveal orange darken-1\">\r\n                  \r\n                  <span className=\"card-title  card-more grey-text text-darken-4\"><b>{name}</b><i className=\" icon-close material-icons right\">close</i></span>\r\n                  <p>{description}</p>\r\n                </div>\r\n                  \r\n                <input type='Number' min='1' placeholder='Enter qty' size='4' value={qty} onChange={amount} className='Item-qty'/>\r\n                <button className=\"btn Item-btn waves-effect waves-light\" onClick={()=>selectedid({id,qty:qty})}\r\n                type=\"submit\" name=\"add\">Add<i className=\"material-icons right\">shopping_cart</i>   \r\n                </button>\r\n               \r\n              </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Item\r\n","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Cart.js",["48","49","50"],"import React from 'react'\r\n\r\nconst Cart = ({product,price,qty,image,deleteditem,id,add_qty,remove_qty}) => {\r\n    \r\n     const amount = price*qty\r\n  return (\r\n    <div className=\"cart\">\r\n        <div className='row'>\r\n                <div className='col s12 m6'> \r\n                <img className='cart-photo'  src={image} alt='product-image'/> \r\n                </div>\r\n\r\n            <div className='cart-info col s12 m6'>\r\n                    <span><b>Product</b> {qty}x{product}</span><br/>\r\n                    <span><b>Price:</b> £ {amount.toFixed(2)}</span> \r\n                    <a className=\"btn-floating btn-small add-btn\" onClick={()=>add_qty({id,qty:Number(qty)+1})}><i className=\"material-icons\">add</i></a>\r\n                    <a className=\"btn-floating btn-small \" onClick={()=>remove_qty({id,qty:Number(qty)-1})}><i className=\"material-icons\">remove</i></a>\r\n                  <button type=\"submit\" className=\"delete delete-btn right \" onClick ={()=>deleteditem(id)}><i className=\"material-icons \">delete_forever</i></button>\r\n            </div> \r\n          \r\n        </div> \r\n\r\n            \r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Checkout.js",[],"C:\\Users\\hsev\\Documents\\reactplayground\\online-shop\\src\\components\\Category.js",["51","52","53"],"import React, {useState} from 'react'\r\n\r\nconst Category = ({selection}) => {\r\n  const [select, setSelect]= useState(\"Clothes\")\r\n\r\n  const [categoryselect]= React.useState({\r\n         selection\r\n  })\r\n\r\n   const onChangeValue = (e)=>{ \r\n        setSelect(e.target.value)\r\n        categoryselect.selection(e.target.value)\r\n      }\r\n\r\n  return (\r\n    <div>\r\n      <h6><b>Select  Product Category</b></h6>\r\n      <p >\r\n    <label className=\"radio-btn\">\r\n      <input class=\"with-gap\" value=\"Clother\" name=\"Clothes\" value=\"Clothes\" type=\"radio\" checked ={select===\"Clothes\"} onChange={onChangeValue} />\r\n      <span>Clothes </span>\r\n    </label>\r\n\r\n    <label className=\"radio-btn\">\r\n      <input class=\"with-gap\" value=\"Shoes\" name=\"Shoes\" type=\"radio\" value=\"Shoes\" checked ={select===\"Shoes\"} onChange={onChangeValue} />\r\n      <span>Shoes</span>\r\n    </label>\r\n\r\n    <label className=\"radio-btn\">\r\n      <input class=\"with-gap\" value=\"Fruits\" name=\"Fruits\" type=\"radio\" value=\"Fruits\" checked={select===\"Fruits\"} onChange={onChangeValue} />\r\n      <span>Fruits</span>\r\n    </label> \r\n  </p>\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Category\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":12},{"ruleId":"62","severity":1,"message":"63","line":8,"column":7,"nodeType":"64","endLine":8,"endColumn":43},{"ruleId":"58","severity":1,"message":"65","line":17,"column":22,"nodeType":"60","messageId":"61","endLine":17,"endColumn":37},{"ruleId":"66","severity":1,"message":"67","line":33,"column":3,"nodeType":"68","endLine":33,"endColumn":5,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":13,"column":19,"nodeType":"64","endLine":13,"endColumn":57},{"ruleId":"70","severity":1,"message":"71","line":10,"column":17,"nodeType":"64","endLine":10,"endColumn":79},{"ruleId":"62","severity":1,"message":"72","line":16,"column":21,"nodeType":"64","endLine":16,"endColumn":113},{"ruleId":"62","severity":1,"message":"72","line":17,"column":21,"nodeType":"64","endLine":17,"endColumn":109},{"ruleId":"73","severity":1,"message":"74","line":20,"column":62,"nodeType":"75","endLine":20,"endColumn":77},{"ruleId":"73","severity":1,"message":"74","line":25,"column":71,"nodeType":"75","endLine":25,"endColumn":84},{"ruleId":"73","severity":1,"message":"74","line":30,"column":73,"nodeType":"75","endLine":30,"endColumn":87},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Cart' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setCategorypick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categorypick'. Either include it or remove the dependency array.","ArrayExpression",["78"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [categorypick]",{"range":"81","text":"82"},[1060,1062],"[categorypick]"]